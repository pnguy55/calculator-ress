{"version":3,"sources":["components/CalculatorBody.js","components/MainScreen.js","components/HistoryScreen.js","components/HistoryButton.js","components/NumberButton.js","components/OperationButton.js","components/ButtonPad.js","components/DeleteButton.js","components/App.js","index.js"],"names":["CalculatorBody","props","style","backgroundColor","minHeight","height","maxHeight","children","MainScreen","className","width","border","borderRadius","display","justifyContent","fontSize","fontWeight","wholeEquation","currentExpression","HistoryScreen","alignItems","whiteSpace","overflow","onClick","historyScreenIndex","historyScreenPressHandler","console","log","undefined","displayHistoryEquation","resultFromHistory","HistoryButton","color","historyViewIndexChangeHandler","operation","this","React","Component","NumberButton","lastInputGetter","bind","split","pop","numberPressHandler","number","OperationButton","operatorPress","operator","currentCopy","lastInput","isNaN","decimalCheckArray","i","length","flag","lastResult","equalsHandler","ButtonPad","DeleteButton","deleteHistoryHandler","axios","require","safeEval","App","state","resultArray","equation","result","historyIndex","historyViewIndex","historyLength","pgArray","numberPress","equalsPress","historyViewChange","historyScreenPress","deleteHistory","set_historyLength_from_spring","response","setState","data","get","headers","then","res","catch","error","set_pgArray_from_spring","delete","post","delta","newHistoryIndex","parseInt","equationFromHistory","parseFloat","toString","replace","toFixed","input","multiplyParenthesis","concat","negativeParenthesis","currentExpressionFromProps","currentExpressionParenCheck","countParensLeft","countParensRight","firstOperator","currentExpressionArray","currentExpressionJoined","takeOffFirstNumber","splice","shift","join","margin","marginTop","marginBottom","ReactDOM","render","document","querySelector"],"mappings":"iPAWeA,G,MATQ,SAACC,GACpB,OACI,yBAAKC,MAAO,CAACC,gBAAgB,UAAWC,UAAW,QAAQC,OAAQ,QAASC,UAAW,UAClFL,EAAMM,YCkBJC,EArBI,SAACP,GAChB,OACI,yBAAKQ,UAAU,wBAAwBP,MAAO,CAACC,gBAAiB,UAAWO,MAAO,OAAQL,OAAQ,OAAOM,OAAQ,oBAAqBC,aAAc,SAChJ,yBAAKH,UAAU,MACVP,MAAO,CAACW,QAAS,OACTC,eAAe,WACfC,SAAU,MACVC,WAAY,QACrB,6BAAMf,EAAMgB,gBAEhB,yBAAKR,UAAU,MACVP,MAAO,CAACW,QAAS,OACTC,eAAe,WACfC,SAAU,MACVC,WAAY,QACpBf,EAAMiB,qBCaRC,EA5BO,SAAClB,GACnB,OACI,yBAAKQ,UAAU,SACVP,MAAO,CAACG,OAAQ,OACTF,gBAAiB,UACjBQ,OAAO,oBACPC,aAAc,OACdC,QAAS,OACTC,eAAgB,WAChBM,WAAY,SACZL,SAAU,MACVM,WAAY,SACZC,SAAU,UAEjBC,QAAW,WACQtB,EAAMuB,mBAAqB,EAC3BvB,EAAMwB,4BAEPC,QAAQC,IAAI,yBAGHC,IAA/B3B,EAAM4B,uBAAoC,GAAK5B,EAAM4B,uBAnBtD,WAmB2GD,IAA1B3B,EAAM6B,kBAA+B,GAAK7B,EAAM6B,oBCK1HC,E,YAzBX,WAAY9B,GAAO,qEACTA,I,sEAED,IAAD,OACJ,OACI,yBAAKQ,UAAU,0BACfP,MAAO,CACAG,OAAQ,OACRQ,QAAS,OACTC,eAAgB,SAChBM,WAAY,SACZjB,gBAAiB,UACjB6B,MAAO,UACPrB,OAAQ,oBACRC,aAAc,OACdG,SAAU,MACVC,WAAY,OAEpBO,QAAW,WAAK,EAAKtB,MAAMgC,8BAA8B,EAAKhC,MAAMiC,aAC9DC,KAAKlC,MAAMiC,e,GApBAE,IAAMC,WCkCnBC,E,YAhCX,WAAYrC,GAAO,IAAD,8BACd,4CAAMA,KACDsC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAFT,E,6EAKFtB,GACMA,EAAkBuB,MAAM,IACdC,Q,+BAGvB,IAAD,OACJ,OACI,yBAAKjC,UAAU,uBACXP,MAAO,CACCG,OAAQ,OACRQ,QAAS,OACTC,eAAgB,SAChBM,WAAY,SACZjB,gBAAiB,UACjB6B,MAAO,UACPrB,OAAQ,oBACRC,aAAc,OACdG,SAAU,MACVC,WAAY,OAEpBO,QAAS,WAAO,EAAKgB,gBAAgB,EAAKtC,MAAMiB,mBAAoB,EAAKjB,MAAM0C,mBAAmB,EAAK1C,MAAM2C,UAC7G,2BAAIT,KAAKlC,MAAM2C,a,GA5BJR,IAAMC,WCwIlBQ,E,YAtIX,WAAY5C,GAAO,IAAD,8BACd,4CAAMA,KACD6C,cAAgB,EAAKA,cAAcN,KAAnB,gBAFP,E,2EAKJO,EAAU7B,GACpB,IAAI8B,EAAc9B,EAAkBuB,MAAM,IACtCQ,EAAYD,EAAYN,MAG5B,QAAkBd,IAAdqB,GAAsC,MAAXF,EAC3B,OAAO,EAEX,GAAIG,MAAMD,IAAyB,MAAXF,EACpB,OAAO,EAEX,GAAIG,MAAMD,IAA0B,MAAXF,EACrB,OAAO,EAEX,GAAiB,OAAbA,GAAkC,MAAbA,EACrB,OAAO,EAEX,GAAiB,MAAbA,EAAkB,CAClB,GAAIG,MAAMD,IAA4B,MAAdA,GAA8C,MAAzBd,KAAKlC,MAAMgD,UACpD,OAAO,EAEN,GAAkB,MAAdA,GAA8C,MAAzBd,KAAKlC,MAAMgD,UACrC,OAAO,EAEX,IAAIE,EAAoBH,EAAcC,EACtCE,EAAkBV,MAAM,IAGxB,IAAI,IAAIW,EAAID,EAAkBE,OAAQD,EAAI,EAAGA,IAAI,CAC7C,GAA+B,MAA3BD,EAAkBC,EAAE,GACpB,OAAO,EAEN,GAAIF,MAAMC,EAAkBC,EAAE,IAC/B,OAAO,GAMnB,GAAiB,MAAbL,EAAkB,CAClB,IAAIO,GAAO,EACX,GAA6B,MAAzBnB,KAAKlC,MAAMgD,UACX,OAAO,EAEX,IAAI,IAAIG,EAAI,EAAGA,EAAIJ,EAAYK,OAAQD,IACd,MAAjBJ,EAAYI,KACZE,GAAO,GAEU,MAAjBN,EAAYI,KACZE,GAAO,GAGf,IAAa,IAATA,EACA,OAAO,EAyBf,OAAIL,GAAW,GAAKA,GAAW,IAGR,MAAdA,GAAkC,MAAbF,GAGR,MAAbA,IAEa,MAAdE,IAGK/B,IAAsBiB,KAAKlC,MAAMsD,aAGnB,MAAdN,QAAJ,Q,+BASH,IAAD,OACT,OACI,yBAAKxC,UAAU,0BACVP,MAAO,CACAG,OAAQ,OACRQ,QAAS,OACTC,eAAgB,SAChBM,WAAY,SACZjB,gBAAiB,UACjB6B,MAAO,UACPrB,OAAQ,oBACRC,aAAc,OACdG,SAAU,MACVC,WAAY,OAEpBO,QAAS,WACD,EAAKuB,cAAc,EAAK7C,MAAMiC,UAAW,EAAKjC,MAAMiB,oBACpD,EAAKjB,MAAM0C,mBAAmB,EAAK1C,MAAMiC,WAEhB,MAAzB,EAAKjC,MAAMiC,WAAqB,EAAKY,cAAc,EAAK7C,MAAMiC,UAAW,EAAKjC,MAAMiB,oBACpF,EAAKjB,MAAMuD,cAAc,EAAKvD,MAAMiB,qBAG5C,2BAAIiB,KAAKlC,MAAMiC,gB,GAnIGE,IAAMC,WCarBoB,EAbG,SAACxD,GACf,OACI,yBAAKQ,UAAU,gBACVP,MAAO,CAACQ,MAAO,OACPL,OAAQ,OACRF,gBAAiB,UACjBQ,OAAQ,oBACRC,aAAc,SACtBX,EAAMM,WCqBJmD,G,iBA1BX,WAAYzD,GAAO,qEACTA,I,sEAGD,IAAD,OACJ,OACI,yBAAKQ,UAAU,mBACXP,MAAO,CACCG,OAAQ,OACRQ,QAAS,OACTC,eAAgB,SAChBM,WAAY,SACZjB,gBAAiB,UACjB6B,MAAO,UACPrB,OAAQ,oBACRC,aAAc,OACdI,WAAY,MACZD,SAAU,OAElBQ,QAAS,WAAO,EAAKtB,MAAM0D,yBAC3B,2BAAIxB,KAAKlC,MAAMiC,gB,GAtBJE,IAAMC,YCY7BuB,EAAQC,EAAQ,GAChBC,EAAWD,EAAQ,IAgrBRE,E,YA3qBX,WAAY9D,GAAQ,IAAD,8BACf,4CAAMA,KAED+D,MAAQ,CAAE/C,cAAe,CAAC,IAChBC,kBAAmB,GACnB+B,UAAW,GACXM,WAAY,GACZU,YAAa,CAAC,CACbC,SAAU,GACVC,OAAQ,KAETtC,uBAAwB,CACpBqC,SAAU,GACVC,OAAQ,IAEZC,aAAc,EACdC,iBAAkB,EAClBC,cAAe,EACfC,QAAS,CAAC,CACNL,SAAU,GACVC,OAAQ,MAG3B,EAAKK,YAAc,EAAKA,YAAYhC,KAAjB,gBACnB,EAAKiC,YAAc,EAAKA,YAAYjC,KAAjB,gBACnB,EAAKkC,kBAAoB,EAAKA,kBAAkBlC,KAAvB,gBACzB,EAAKmC,mBAAqB,EAAKA,mBAAmBnC,KAAxB,gBAC1B,EAAKoC,cAAgB,EAAKA,cAAcpC,KAAnB,gBA3BN,E,iFA8BE,IAAD,OAsBVqC,EAAgC,SAACC,GACnC,EAAKC,SAAS,CACVT,cAAeQ,EAASE,OACzB,WACC,EAAKD,SAAS,CACVV,iBAAkB,EAAKL,MAAMM,oBAOzCV,EAAMqB,IAAI,0DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUL,IApCgB,SAACA,GAC7B,EAAKC,SAAS,CACVR,QAASO,EAASE,OACnB,WAECpB,EAAMqB,IAAI,4DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUC,GAEZP,EAA8BO,MAGjCC,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,SAuBpBC,CAAwBT,MAE3BO,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,Q,2CAMhB5D,QAAQC,IAAIQ,KAAK6B,S,oCAGPoB,GAAK,IAAD,OAuBRP,EAAgC,SAACC,GACnC,EAAKC,SAAS,CACVT,cAAeQ,EAASE,OACzB,WACC,EAAKD,SAAS,CACVV,iBAAkB,EAAKL,MAAMM,gBAC9B,kBAAM,EAAKS,SAAS,CACnB7D,kBAAmB,GACnB+B,UAAW,GACXhC,cAAe,CAAC,aAQ5B2C,EAAM4B,OAAO,0DACL,CACIN,QAAS,CAAC,8BAA+B,OAEpDC,MAAK,SAAUC,GAERxB,EAAM6B,KAAK,sDAAuD,CAC1DvB,SAAU,GACVC,OAAQ,IAEZ,CACIe,QAAS,CAAC,8BAA+B,OAE3CC,MAAK,SAAUL,GAEblB,EAAMqB,IAAI,0DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUC,IAzDA,SAACN,GAC7B,EAAKC,SAAS,CACVR,QAASO,EAASE,KAClBX,iBAAkB,IACnB,WAECT,EAAMqB,IAAI,4DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUC,GAEZP,EAA8BO,MAGjCC,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,SA2CJC,CAAwBH,MAE3BC,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,SAIvBD,OAAM,SAAUC,GACjB5D,QAAQC,IAAI2D,SAGnBD,OAAM,SAAUC,GACjB5D,QAAQC,IAAI2D,Q,wCAIEI,GACdhE,QAAQC,IAAI,yBAA2BQ,KAAK6B,MAAMK,kBAClD,IAAIsB,EAAkBxD,KAAK6B,MAAMK,iBAC7BC,EAAgBnC,KAAK6B,MAAMM,cAE/B5C,QAAQC,IAAI,oBAAqBgE,EAAkB,oBAAsBrB,GAC3D,SAAVoB,IACAC,EAAkB,EAAKA,EAAkBC,SAASzD,KAAK6B,MAAMK,kBAAoB,EAAK3C,QAAQC,IAAI,mBAExF,SAAV+D,IACAC,EAAkBrB,EAAiBqB,EAAkBC,SAASzD,KAAK6B,MAAMK,kBAAoB,EAAK3C,QAAQC,IAAI,mBAGlHD,QAAQC,IAAIgE,GACPA,EAAkB,GAAKA,GAAmBrB,EAC3CnC,KAAK4C,SAAS,CACVV,iBAAkBsB,IACnB,eAKHjE,QAAQC,IAAI,oB,2CAyBC,IAAD,OAsBVkD,EAAgC,SAACC,GACnC,EAAKC,SAAS,CACVT,cAAeQ,EAASE,OACzB,WACC,EAAKD,SAAS,CACVV,iBAAkB,EAAKL,MAAMM,oBAMrCuB,EAAsB1D,KAAK6B,MAAMO,QAAQqB,SAASzD,KAAK6B,MAAMK,kBAAoB,GAAGH,SACxFxC,QAAQC,IAAIkE,GACZ1D,KAAK4C,SAAS,CACNxB,WAAW,IAAD,OAAMpB,KAAK6B,MAAMO,QAAQqB,SAASzD,KAAK6B,MAAMK,kBAAoB,GAAGF,OAApE,KACVlB,UAAW,IACX/B,kBAAkB,GAAD,OAAKiB,KAAK6B,MAAMO,QAAQqB,SAASzD,KAAK6B,MAAMK,kBAAoB,GAAGF,QACpFlD,cAAe,CAAC,IAChBoD,iBAAkBlC,KAAK6B,MAAMO,QAAQlB,OAAS,IACnD,WACCO,EAAM6B,KAAK,sDAAuD,CACtDvB,SAAU2B,EACV1B,OAAO,GAAD,OAAK2B,WAAWhC,EAAS+B,EAAoBE,WAAWC,QAAQ,KAAK,KAAKC,QAAQ,GAAGF,cAE/F,CACIb,QAAS,CAAC,8BAA+B,OAE3CC,MAAK,SAAUL,GAEblB,EAAMqB,IAAI,0DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUC,IArDA,SAACN,GAC7B,EAAKC,SAAS,CACVR,QAASO,EAASE,OACnB,WAECpB,EAAMqB,IAAI,4DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUC,GAEZP,EAA8BO,MAGjCC,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,SAwCJC,CAAwBH,MAE3BC,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,SAIzBD,OAAM,SAAUC,GACf5D,QAAQC,IAAI2D,W,kCAwBZY,GAER,GAAc,OAAVA,EACA/D,KAAK4C,SAAS,CACV7D,kBAAmB,GACnB+B,UAAW,GACXhC,cAAe,CAAC,WAGnB,GAAc,MAAViF,GAAqD,IAApC/D,KAAK6B,MAAM/C,cAAcoC,OAC/ClB,KAAK4C,SAAS,CACV7D,kBAAmB,GACnB+B,UAAW,UAGd,GAAc,MAAViD,GAAiB/D,KAAK6B,MAAM/C,cAAcoC,OAAS,EAExDlB,KAAK4C,SAAS,CACV7D,kBAAkB,IAAD,OAAMiB,KAAK6B,MAAMT,WAAjB,KACjBN,UAAW,WAGd,GAA6B,MAAzBd,KAAK6B,MAAMf,WAAqBiD,GAAO,GAAKA,GAAO,EAAG,CAC3D,IAAIC,EAAsB,IAAMD,EAChC/D,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOD,GACvDlD,UAAWiD,IACZ,oBAGF,GAAc,MAAVA,GAA0C,KAAzB/D,KAAK6B,MAAMf,UACjCd,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOF,GACvDjD,UAAWiD,IACZ,oBAGF,GAAc,MAAVA,GAA0C,KAAzB/D,KAAK6B,MAAMf,UACjCd,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOF,GACvDjD,UAAWiD,IACZ,oBAGF,GAAc,MAAVA,GAA0C,MAAzB/D,KAAK6B,MAAMf,UAAmB,CACpDvB,QAAQC,IAAI,MACR,IAAI0E,EAAsBH,EAC1B/D,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOC,GACvDpD,UAAWiD,IACZ,oBAGN,GAAc,MAAVA,GAA2C,MAAzB/D,KAAK6B,MAAMf,WAA8C,MAAzBd,KAAK6B,MAAMf,WAA8C,MAAzBd,KAAK6B,MAAMf,WAA8C,MAAzBd,KAAK6B,MAAMf,UAOjI,GAAc,MAAViD,IAAmB/D,KAAK6B,MAAMf,WAAW,GAAKd,KAAK6B,MAAMf,WAAW,GAA6B,MAAvBd,KAAK6B,MAAMf,WAAmBd,KAAK6B,MAAMf,WAAY,CACpI,IAAIkD,EAAsB,IAAID,EAC9B/D,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOD,GACvDlD,UAAWiD,IACZ,oBAGF,GAAc,MAAVA,GAAiBhD,MAAMf,KAAK6B,MAAMf,WACvCd,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOF,GACvDjD,UAAWiD,IACZ,oBAGF,GAAc,MAAVA,GAA0C,MAAzB/D,KAAK6B,MAAMf,UAAmB,CACpD,IAAIoD,EAAsB,IAAIH,EAC9B/D,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOC,GACvDpD,UAAWiD,IACZ,mBAGY,MAAVA,GACL/D,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOF,GACvDjD,UAAWiD,IACZ,oBAjCH/D,KAAK4C,SAAS,CACV7D,kBAAmBiB,KAAK6B,MAAM9C,kBAAkBkF,OAAOF,GACvDjD,UAAWiD,IACZ,iB,kCAmCCI,GA6CR,IA7CqC,IAAD,OAG9Bf,EAA0B,SAACT,GAC7B,EAAKC,SAAS,CACVR,QAASO,EAASE,OACnB,WAECpB,EAAMqB,IAAI,4DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUC,GAEZP,EAA8BO,MAGjCC,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,UAKlBT,EAAgC,SAACC,GACnC,EAAKC,SAAS,CACVT,cAAeQ,EAASE,OACzB,WACC,EAAKD,SAAS,CACVV,iBAAkB,EAAKL,MAAMM,oBAMrCiC,EAA8BD,EAA2B7D,MAAM,IAC/D+D,EAAkB,EAClBC,EAAmB,EASfrD,EAAE,EAAGA,EAAImD,EAA4BlD,OAAQD,IACV,MAAnCmD,EAA4BnD,IAC5BoD,IAEmC,MAAnCD,EAA4BnD,IAC5BqD,IAGR,GAAID,IAAoBC,EACpBtE,KAAK4C,SAAS,CACV7D,kBAAmB,iEACP+B,UAAW,GACXhC,cAAe,CAAC,UAI/B,CACD,IAAIkD,EAAS2B,WAAWhC,EAASwC,EAA2BN,QAAQ,KAAK,KAAKC,QAAQ,IAAIF,WAE1F,GADArE,QAAQC,IAAImE,WAAW3D,KAAK6B,MAAM9C,mBAAoB4E,WAAW3D,KAAK6B,MAAM/C,cAAc,KAClD,IAApCkB,KAAK6B,MAAM/C,cAAcoC,OACzBlB,KAAK4C,SAAS,CACV9D,cAAe6E,WAAW3D,KAAK6B,MAAM9C,kBAAkB6E,WAAWC,QAAQ,QAAQ,OAASF,WAAW3D,KAAK6B,MAAM/C,cAAc8E,WAAWC,QAAQ,QAAQ,KAAO7D,KAAK6B,MAAM/C,cAAgBkB,KAAK6B,MAAM/C,cAAcmF,OAAzB,WAAoCE,EAApC,MAC5LpF,kBAAkB,IAAD,OAAMiD,EAAN,KACjBlB,UAAW,IACXM,WAAW,GAAD,OAAKY,KAChB,WAE+B,eAA1B,EAAKH,MAAMT,YAAyD,SAA1B,EAAKS,MAAMT,WACrD,EAAKwB,SAAS,CACV7D,kBAAmB,uCACnB+B,UAAW,GACXhC,cAAe,CAAC,OAIpBS,QAAQC,IAAI,EAAKqC,MAAM/C,cAAc8E,WAAWC,QAAQ,KAAK,KAC7DtE,QAAQC,IAAI,kBAAkB,GAAlB,OAAqBmE,WAAWhC,EAAS,EAAKE,MAAM/C,cAAc8E,WAAWC,QAAQ,KAAK,KAAKC,QAAQ,GAAGF,cAEtHnC,EAAM6B,KAAK,sDAAuD,CAClDvB,SAAU,EAAKF,MAAM/C,cAAc8E,WAAWC,QAAQ,KAAK,IAC3D7B,OAAQ,EAAKH,MAAMT,YAEvB,CACI2B,QAAS,CAAC,8BAA+B,OAE3CC,MAAK,SAAUL,GAEblB,EAAMqB,IAAI,0DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUC,GAEZG,EAAwBH,MAE3BC,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,SAIzBD,OAAM,SAAUC,GACf5D,QAAQC,IAAI2D,cAK3B,CAED,IASIoB,EAUAC,EACAC,EApBAC,EAAqBP,EAA2B7D,MAAM,gBAE1Df,QAAQC,IAAI,eAAiBkF,GAC7BA,EAAmBC,OAAO,EAAE,GAG5BpF,QAAQC,IAAI,gBAAiBkF,EAAmB,GAAI,oBAAsBA,QAK7CjF,IAA1BiF,EAAmB,GAElBH,GADAA,EAAeG,EAAmB,GAAGpE,MAAM,KACbsE,aAEAnF,IAA1BiF,EAAmB,KACvBA,EAAqBP,EAA2BP,WAAWC,QAAQ,QAAQ,KAM5Ea,EAAmBxD,OAAS,QAA+BzB,IAA1BiF,EAAmB,KACnDF,EAAwBE,EAAmBG,KAAK,IAAIvE,MAAM,KACnCqE,OAAO,EAAE,GAChCF,EAA0BD,EAAuBK,KAAK,KAGtDJ,EAA0BC,EAGT,MAAlBH,IACCA,EAAgB,KAGS,MAA1BG,EAAmB,IAClBA,EAAmB,GAAK,GACxBA,EAAmB,GAAK,GACxBH,EAAgB,IAChBE,EAA0BC,EAAmBG,KAAK,KAEpB,MAA1BH,EAAmB,IACvBA,EAAmB,GAAK,GACxBA,EAAmB,GAAK,GACxBH,EAAgB,IAChBE,EAA0BC,EAAmBG,KAAK,KAEpB,MAA1BH,EAAmB,KACvBA,EAAmB,GAAK,GACxBA,EAAmB,GAAK,GACxBH,EAAgB,IAChBE,EAA0BC,EAAmBG,KAAK,KAGtDtF,QAAQC,IAAI,gBAAiBkF,EAAmB,GAAI,oBAAsBA,EAAoB,sBAAuBD,GACtF,MAA/BA,EAAwB,GAAaA,EAAwBE,OAAO,EAAE,GAAGf,WAAarE,QAAQC,IAAI,qBAC9FkF,IAAuBD,KACnBA,EAA0BA,EAAwB,GAAGnE,MAAM,KACnC,GAAG,GAC3BmE,EAA0BA,EAAwBI,KAAK,IACvDtF,QAAQC,IAAI,2CAKpBD,QAAQC,IAAI,gBAAiBkF,EAAmB,GAAI,oBAAsBA,EAAoB,sBAAuBD,GAErF,MAA5BA,KACAC,EAAqBA,EAAmB,GAAGpE,MAAM,KAC9B,GAAK,GACxBmE,EAA0BC,EAAmBd,WAAWC,QAAQ,KAAK,KAGzE7D,KAAK4C,SAAS,CACV9D,mBAAiCW,IAAlB8E,EAA8BG,EAAqBH,IAAkBE,EAA0BzE,KAAK6B,MAAM/C,cAAcmF,OAAzB,UAAmCQ,IAA6BzE,KAAK6B,MAAM/C,cAAcmF,OAAzB,UAAmCM,EAAnC,YAAoDE,EAApD,MAC9K1F,kBAAmBwF,IAAkBE,EAA0BzC,EAA5C,WAAwDA,EAAxD,KACnBlB,UAAW,IACXM,WAAW,GAAD,OAAKY,KAChB,WAC8B,eAA1B,EAAKH,MAAMT,YAAyD,SAA1B,EAAKS,MAAMT,WACpD,EAAKwB,SAAS,CACV7D,kBAAmB,6CACnB+B,UAAW,GACXhC,cAAe,CAAC,MAIpB2C,EAAM6B,KAAK,sDAAuD,CAClDvB,SAAU,EAAKF,MAAM/C,cAAc8E,WAAWC,QAAQ,KAAK,IAC3D7B,OAAQ,EAAKH,MAAMT,YAEvB,CACI2B,QAAS,CAAC,8BAA+B,OAE3CC,MAAK,SAAUL,GAEblB,EAAMqB,IAAI,0DACE,CACIC,QAAS,CAAC,8BAA+B,OAExDC,MAAK,SAAUC,GAEZG,EAAwBH,MAE3BC,OAAM,SAAUC,GACb5D,QAAQC,IAAI2D,SAIzBD,OAAM,SAAUC,GACf5D,QAAQC,IAAI2D,a,+BAcpC,OACI,6BAEQ,6BAEI,kBAAC,EAAD,CAAgB7E,UAAU,aACtB,kBAAC,EAAD,CAAYA,UAAU,MAAMP,MAAO,CAAC+G,OAAQ,OAChChG,cAAgBkB,KAAK6B,MAAM/C,cAC3BC,kBAAmBiB,KAAK6B,MAAM9C,oBAE1C,yBAAKT,UAAU,gBAAgBP,MAAO,CAACQ,MAAO,OAAOL,OAAQ,OAAO6G,UAAW,MAAOC,aAAc,QAChG,kBAAC,EAAD,CAAezB,MAAM,KAAKxD,UAAU,OAAOhC,MAAO,CAACa,SAAU,OAAQsD,iBAAoBlC,KAAK6B,MAAMK,iBAAkBpC,8BAAiCE,KAAKuC,oBAC5J,kBAAC,EAAD,CAAexE,MAAO,CAAC+G,OAAQ,OAAQzF,mBAAoBW,KAAK6B,MAAMO,QAAQlB,OAAQ5B,0BAA6BU,KAAKwC,mBAAoB9C,uBAA0BM,KAAK6B,MAAMO,QAAQpC,KAAK6B,MAAMK,iBAAiB,GAAGH,SAAUpC,kBAAqBK,KAAK6B,MAAMO,QAAQpC,KAAK6B,MAAMK,iBAAiB,GAAGF,SACzS,kBAAC,EAAD,CAAeuB,MAAM,IAAIxD,UAAU,OAAOhC,MAAO,CAACa,SAAU,OAAQsD,iBAAoBlC,KAAK6B,MAAMK,iBAAkBpC,8BAAiCE,KAAKuC,qBAE/J,kBAAC,EAAD,CAAWxE,MAAO,CAAC+G,OAAQ,QACvB,yBAAKxG,UAAU,MAAMP,MAAO,CAACG,OAAQ,MAAO4G,OAAQ,QAChD,kBAAC,EAAD,CAAiB/E,UAAU,IAAIS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAgBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,aAC5N,kBAAC,EAAD,CAAiBrB,UAAU,IAAIS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAiBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,aAC7N,kBAAC,EAAD,CAAiBrB,UAAU,KAAKS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAiBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,aAC9N,kBAAC,EAAD,CAAiBrB,UAAU,IAAIS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAiBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,cAEjO,yBAAK9C,UAAU,MAAMP,MAAO,CAACG,OAAQ,MAAO4G,OAAQ,QAChD,kBAAC,EAAD,CAAcrE,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAc0B,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAc0B,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAiBgB,UAAU,IAAIS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAgBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,cAEhO,yBAAK9C,UAAU,MAAMP,MAAO,CAACG,OAAQ,MAAO4G,OAAQ,QAChD,kBAAC,EAAD,CAAcrE,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAc0B,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAc0B,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAiBgB,UAAU,IAAIS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAgBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,cAEhO,yBAAK9C,UAAU,MAAMP,MAAO,CAACG,OAAQ,MAAO4G,OAAQ,QAChD,kBAAC,EAAD,CAAcrE,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAc0B,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAc0B,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAiBgB,UAAU,IAAIS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAgBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,cAEhO,yBAAK9C,UAAU,MAAMP,MAAO,CAACG,OAAQ,MAAO4G,OAAQ,QAChD,kBAAC,EAAD,CAAcrE,OAAO,IAAID,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,oBAC7F,kBAAC,EAAD,CAAiBgB,UAAU,IAAIS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAgBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,aAC5N,kBAAC,EAAD,CAAiBrB,UAAU,IAAIsB,cAAerB,KAAKsC,YAAa9B,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAgBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,aAC7P,kBAAC,EAAD,CAAiBrB,UAAU,IAAIS,mBAAoBR,KAAKqC,YAAatD,kBAAmBiB,KAAK6B,MAAM9C,kBAAmBD,cAAekB,KAAK6B,MAAM/C,cAAgBgC,UAAad,KAAK6B,MAAMf,UAAWM,WAAcpB,KAAK6B,MAAMT,cAEhO,yBAAK9C,UAAU,MAAMP,MAAO,CAACG,OAAQ,MAAO4G,OAAQ,QAChD,kBAAC,EAAD,CAAc/E,UAAU,iBAAiByB,qBAAsBxB,KAAKyC,yB,GAjqBtFvC,aCJlB+E,IAASC,OAED,kBAAC,EAAD,MAEJC,SAASC,cAAc,Y","file":"static/js/main.10fa5da9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CalculatorBody = (props) => {\r\n    return (\r\n        <div style={{backgroundColor:'#939399', minHeight: '250px',height: '100vh', maxHeight: '100vh'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CalculatorBody;","import React from 'react';\r\n\r\nconst MainScreen = (props) => {\r\n    return (\r\n        <div className='main-screen container' style={{backgroundColor: '#E6E6E6', width: '100%', height: '25vh',border: '3px solid #939399', borderRadius: '13px'}}>\r\n            <div className='row' \r\n                 style={{display: 'flex', \r\n                         justifyContent:'flex-end',\r\n                         fontSize: '4vh',\r\n                         fontWeight: '600'}}>\r\n                <div>{props.wholeEquation}</div>\r\n            </div>\r\n            <div className='row' \r\n                 style={{display: 'flex', \r\n                         justifyContent:'flex-end',\r\n                         fontSize: '7vh',\r\n                         fontWeight: '600'}}>\r\n                {props.currentExpression}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainScreen;","import React from 'react';\r\n\r\nconst HistoryScreen = (props) => {\r\n    return(\r\n        <div className='col s6' \r\n             style={{height: '100%', \r\n                    backgroundColor: '#808080', \r\n                    border:'3px solid #939399', \r\n                    borderRadius: '13px',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    alignItems: 'center',\r\n                    fontSize: '6vh',\r\n                    whiteSpace: 'nowrap',\r\n                    overflow: 'hidden',\r\n                }}\r\n             onClick = {() => { \r\n                            if (props.historyScreenIndex > 0) {\r\n                                props.historyScreenPressHandler(); \r\n                             } else {\r\n                               console.log('No History Yet') \r\n                            } \r\n                       }}>\r\n        {props.displayHistoryEquation===undefined? '' : props.displayHistoryEquation} = {props.resultFromHistory===undefined? '' : props.resultFromHistory}\r\n        \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HistoryScreen;","import React from 'react';\r\n\r\nclass HistoryButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className='col s3 operation-button' \r\n            style={{\r\n                   height: '100%',\r\n                   display: 'flex', \r\n                   justifyContent: 'center', \r\n                   alignItems: 'center',\r\n                   backgroundColor: '#000000',\r\n                   color: '#E69010',\r\n                   border: '5px solid #49494D',\r\n                   borderRadius: '13px',\r\n                   fontSize: '6vh',\r\n                   fontWeight: '800'\r\n           }}\r\n           onClick = {()=>{this.props.historyViewIndexChangeHandler(this.props.operation)}}>\r\n                {this.props.operation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryButton;","import React from 'react';\r\n\r\nclass NumberButton extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.lastInputGetter = this.lastInputGetter.bind(this);\r\n    }\r\n\r\n    lastInputGetter(currentExpression){\r\n        let currentCopy = currentExpression.split('');\r\n        let lastInput = currentCopy.pop();\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className='col s3 number-button' \r\n                style={{\r\n                        height: '100%',\r\n                        display: 'flex', \r\n                        justifyContent: 'center', \r\n                        alignItems: 'center',\r\n                        backgroundColor: '#000000',\r\n                        color: '#ffffff',\r\n                        border: '5px solid #49494D',\r\n                        borderRadius: '13px',\r\n                        fontSize: '8vh',\r\n                        fontWeight: '800'\r\n                }}\r\n                onClick={() => {this.lastInputGetter(this.props.currentExpression); this.props.numberPressHandler(this.props.number)}}>            \r\n                <p>{this.props.number}</p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default NumberButton;","import React from 'react';\r\n\r\nclass OperationButton extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.operatorPress = this.operatorPress.bind(this);\r\n    }\r\n    \r\n    operatorPress(operator, currentExpression) {\r\n        let currentCopy = currentExpression.split('');\r\n        let lastInput = currentCopy.pop();\r\n        \r\n        // console.log(`lastInputFromOperator: ${lastInput}`)\r\n        if (lastInput === undefined && operator===\"(\") {\r\n            return true;\r\n        }\r\n        if (isNaN(lastInput) && operator===\"(\") {\r\n            return true;\r\n        }\r\n        if (isNaN(lastInput) &&  operator===\"-\") {\r\n            return true;\r\n        }\r\n        if (operator === 'AC' || operator === 'C') {\r\n            return true;\r\n        }\r\n        if (operator === '.') {\r\n            if (isNaN(lastInput) && lastInput !== '.' && this.props.lastInput !== ')') {\r\n                return true;\r\n            }\r\n            else if (lastInput === '.' || this.props.lastInput === ')') {\r\n                return false;\r\n            }\r\n            let decimalCheckArray = currentCopy + lastInput;\r\n            decimalCheckArray.split('')\r\n\r\n\r\n            for(let i = decimalCheckArray.length; i > 0; i--){\r\n                if (decimalCheckArray[i-1] === '.') {\r\n                    return false;\r\n                }\r\n                else if (isNaN(decimalCheckArray[i-1])) {\r\n                    return true;\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        if (operator === ')') {\r\n            let flag = false;\r\n            if (this.props.lastInput === ')'){\r\n                return false;\r\n            }\r\n            for(let i = 0; i < currentCopy.length; i++) {\r\n                if (currentCopy[i]==='('){\r\n                    flag = true;\r\n                }\r\n                if (currentCopy[i]===')'){\r\n                    flag = false;\r\n                }\r\n            }\r\n            if (flag === false){\r\n                return false;\r\n            }\r\n            \r\n        }\r\n        // if (operator === '(') {\r\n        //     let flag = false;\r\n        //     console.log(currentCopy)\r\n        //     if (this.props.lastInput === '('){\r\n        //         return false;\r\n        //     }\r\n        //     for(let i = 0; i < currentCopy.length; i++) {\r\n        //         if (currentCopy[i]===')'){\r\n        //             flag = true;\r\n        //         }\r\n        //         if (currentCopy[i]==='('){\r\n        //             flag = false;\r\n        //         }\r\n        //         console.log(flag)\r\n        //     }\r\n        //     if (flag === false){\r\n        //         return false;\r\n        //     }\r\n            \r\n        // }\r\n\r\n        if (lastInput>=0 && lastInput<=9){\r\n            return true;\r\n        } \r\n        else if (lastInput === ')' && operator !== '=') {\r\n            return true;\r\n        }\r\n        else if (operator === '=') {\r\n            \r\n            if (lastInput === '=') {\r\n                return false;\r\n            } \r\n            else if (currentExpression === this.props.lastResult) {\r\n                return false;\r\n            }\r\n            else if (lastInput === ')') {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    render() {\r\n    return (\r\n        <div className='col s3 operation-button' \r\n             style={{\r\n                    height: '100%',\r\n                    display: 'flex', \r\n                    justifyContent: 'center', \r\n                    alignItems: 'center',\r\n                    backgroundColor: '#000000',\r\n                    color: '#E69010',\r\n                    border: '5px solid #49494D',\r\n                    borderRadius: '13px',\r\n                    fontSize: '6vh',\r\n                    fontWeight: '800'\r\n            }}\r\n            onClick={() => {\r\n                if (this.operatorPress(this.props.operation, this.props.currentExpression)) {\r\n                    this.props.numberPressHandler(this.props.operation);\r\n                }\r\n                if (this.props.operation === '=' && this.operatorPress(this.props.operation, this.props.currentExpression)) {\r\n                    this.props.equalsHandler(this.props.currentExpression);\r\n                }\r\n             }}>      \r\n            <p>{this.props.operation}</p>\r\n        </div>\r\n    );}\r\n};\r\n\r\nexport default OperationButton;","import React from 'react';\r\n\r\nconst ButtonPad = (props) => {\r\n    return(\r\n        <div className='container row'\r\n             style={{width: '100%',\r\n                     height: '65vh', \r\n                     backgroundColor: '#49494D', \r\n                     border: '3px solid #939399', \r\n                     borderRadius: '13px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ButtonPad;","import React from 'react';\r\nimport axios from 'axios'\r\n\r\nclass DeleteButton extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='col s8 offset-s2'\r\n                style={{\r\n                        height: '100%',\r\n                        display: 'flex', \r\n                        justifyContent: 'center', \r\n                        alignItems: 'center',\r\n                        backgroundColor: '#ffffff',\r\n                        color: '#000000',\r\n                        border: '5px solid #49494D',\r\n                        borderRadius: '13px',\r\n                        fontWeight: '800',\r\n                        fontSize: '2vh'\r\n                }}\r\n                onClick={() => {this.props.deleteHistoryHandler();}}>            \r\n                <p>{this.props.operation}</p>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default DeleteButton;","import React, { Component } from 'react';\r\nimport { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\r\n// import { BrowserRouter, Route } from 'react-router-dom';\r\n// import { connect } from 'react-redux';\r\n// import * as actions from '../actions';\r\n\r\nimport CalculatorBody from './CalculatorBody';\r\nimport MainScreen from './MainScreen';\r\nimport HistoryScreen from './HistoryScreen';\r\nimport HistoryButton from './HistoryButton';\r\nimport NumberButton from './NumberButton';\r\nimport OperationButton from './OperationButton';\r\nimport ButtonPad from './ButtonPad';\r\nimport DeleteButton from './DeleteButton';\r\n\r\nvar axios = require('axios');\r\nvar safeEval = require('safe-eval');\r\n\r\n\r\nclass App extends Component {\r\n    // FIRST THING MADE WHEN APP IS RENDERED PERFECT PLACE FOR STATE\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { wholeEquation: [''], \r\n                       currentExpression: '', \r\n                       lastInput: '', \r\n                       lastResult: '',\r\n                       resultArray: [{\r\n                        equation: '',\r\n                        result: ''                           \r\n                        }],\r\n                       displayHistoryEquation: {\r\n                           equation: '',\r\n                           result: ''                           \r\n                       },\r\n                       historyIndex: 0,\r\n                       historyViewIndex: 1,\r\n                       historyLength: 0,\r\n                       pgArray: [{\r\n                           equation: '',\r\n                           result: ''\r\n                       }]\r\n                    };\r\n        this.numberPress = this.numberPress.bind(this);\r\n        this.equalsPress = this.equalsPress.bind(this);\r\n        this.historyViewChange = this.historyViewChange.bind(this);\r\n        this.historyScreenPress = this.historyScreenPress.bind(this);\r\n        this.deleteHistory = this.deleteHistory.bind(this);\r\n    }\r\n    // Update state on startup - Start\r\n    componentDidMount() {\r\n        //helper functions\r\n        const set_pgArray_from_spring = (response) => {       \r\n            this.setState({\r\n                pgArray: response.data\r\n            }, () => {\r\n                // nested ajax for historyLength\r\n                axios.get('https://calc-spring.herokuapp.com/postgres/equation/count', \r\n                            {\r\n                                headers: {'Access-Control-Allow-Origin': '*'}\r\n                            })\r\n                .then(function (res) {\r\n                    \r\n                    set_historyLength_from_spring(res);\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                // end of nested ajax for historyLength\r\n            })\r\n        }\r\n        const set_historyLength_from_spring = (response) => {\r\n            this.setState({\r\n                historyLength: response.data\r\n            }, () => {\r\n                this.setState({\r\n                    historyViewIndex: this.state.historyLength\r\n                })\r\n            })\r\n        }\r\n        // helper functions\r\n\r\n        // Make a request for equation\r\n        axios.get('https://calc-spring.herokuapp.com/postgres/equation/all', \r\n                    {\r\n                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                    })\r\n        .then(function (response) {\r\n        // handle success\r\n            set_pgArray_from_spring(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n    // Update state on startup - End\r\n\r\n    componentDidUpdate(){\r\n        console.log(this.state)\r\n    }\r\n\r\n    deleteHistory(res){\r\n        //helper functions\r\n        const set_pgArray_from_spring = (response) => {\r\n            this.setState({\r\n                pgArray: response.data,\r\n                historyViewIndex: 1\r\n            }, () => {\r\n                // nested ajax for historyLength\r\n                axios.get('https://calc-spring.herokuapp.com/postgres/equation/count', \r\n                            {\r\n                                headers: {'Access-Control-Allow-Origin': '*'}\r\n                            })\r\n                .then(function (res) {\r\n                    \r\n                    set_historyLength_from_spring(res);\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                // end of nested ajax for historyLength\r\n            })\r\n        }\r\n        const set_historyLength_from_spring = (response) => {\r\n            this.setState({\r\n                historyLength: response.data\r\n            }, () => {\r\n                this.setState({\r\n                    historyViewIndex: this.state.historyLength\r\n                }, () => this.setState({\r\n                    currentExpression: '',\r\n                    lastInput: '',\r\n                    wholeEquation: ['']\r\n                }))\r\n            })\r\n        }\r\n        // helper functions\r\n\r\n\r\n\r\n        axios.delete('https://calc-spring.herokuapp.com/postgres/equation/all', \r\n                {\r\n                    headers: {'Access-Control-Allow-Origin': '*'}\r\n                })\r\n        .then(function (res) {\r\n        // handle success\r\n                axios.post('https://calc-spring.herokuapp.com/postgres/equation', { \r\n                        equation: '', \r\n                        result: ''\r\n                    },\r\n                    {\r\n                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                    }\r\n                    ).then(function (response) {\r\n                        // Make a request for equations\r\n                        axios.get('https://calc-spring.herokuapp.com/postgres/equation/all', \r\n                                    {\r\n                                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                                    })\r\n                        .then(function (res) {\r\n                        // handle success\r\n                            set_pgArray_from_spring(res);\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error);\r\n                        })      \r\n                \r\n                })\r\n                .catch(function (error) {\r\n                console.log(error);\r\n                });\r\n        })\r\n        .catch(function (error) {\r\n        console.log(error);\r\n        })   \r\n    }\r\n\r\n    historyViewChange(delta) {\r\n        console.log(\"PrevHistoryViewIndex: \" + this.state.historyViewIndex);\r\n        let newHistoryIndex = this.state.historyViewIndex;\r\n        let historyLength = this.state.historyLength;\r\n\r\n        console.log(\"newHistoryIndex: \" +newHistoryIndex + \", historyLength: \" + historyLength)\r\n        if (delta === 'prev') {\r\n            newHistoryIndex > 0 ? (newHistoryIndex = parseInt(this.state.historyViewIndex) - 1) : console.log(\"end of history\");\r\n        }\r\n        if (delta === 'next') {\r\n            newHistoryIndex < historyLength ? (newHistoryIndex = parseInt(this.state.historyViewIndex) + 1) : console.log(\"end of history\");\r\n        }\r\n        \r\n        console.log(newHistoryIndex)\r\n        if ( newHistoryIndex > 0 && newHistoryIndex <= historyLength) {\r\n            this.setState({\r\n                historyViewIndex: newHistoryIndex\r\n            }, () => {\r\n \r\n            })\r\n        }\r\n        else {\r\n            console.log('end of history')\r\n        }\r\n    }\r\n    // historyViewChange(delta) {\r\n    //     let newHistoryIndex = this.state.historyViewIndex;\r\n    //     let historyLength = this.state.resultArray.length;\r\n    //     if (delta === 'prev') {\r\n    //         newHistoryIndex < historyLength ? (newHistoryIndex = parseInt(this.state.historyViewIndex) - 1) : console.log(\"end of history\");\r\n    //     } else {\r\n    //         newHistoryIndex > 0 ? (newHistoryIndex = parseInt(this.state.historyViewIndex) + 1) : console.log(\"end of history\");\r\n    //     }\r\n        \r\n    //     console.log(newHistoryIndex)\r\n    //     if ( newHistoryIndex > 0 && newHistoryIndex < this.state.resultArray.length) {\r\n    //         this.setState({\r\n    //             historyViewIndex: newHistoryIndex\r\n    //         }, () => {\r\n \r\n    //         })\r\n    //     }\r\n    //     else {\r\n    //         console.log('end of history')\r\n    //     }\r\n    // }\r\n\r\n    historyScreenPress(){\r\n        //helper functions\r\n        const set_pgArray_from_spring = (response) => {\r\n            this.setState({\r\n                pgArray: response.data\r\n            }, () => {\r\n                // nested ajax for historyLength\r\n                axios.get('https://calc-spring.herokuapp.com/postgres/equation/count', \r\n                            {\r\n                                headers: {'Access-Control-Allow-Origin': '*'}\r\n                            })\r\n                .then(function (res) {\r\n                    \r\n                    set_historyLength_from_spring(res);\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                // end of nested ajax for historyLength\r\n            })\r\n        }\r\n        const set_historyLength_from_spring = (response) => {\r\n            this.setState({\r\n                historyLength: response.data\r\n            }, () => {\r\n                this.setState({\r\n                    historyViewIndex: this.state.historyLength\r\n                })\r\n            })\r\n        }\r\n        // helper functions\r\n\r\n        let equationFromHistory = this.state.pgArray[parseInt(this.state.historyViewIndex) - 1].equation;\r\n        console.log(equationFromHistory)\r\n        this.setState({\r\n                lastResult: `(${this.state.pgArray[parseInt(this.state.historyViewIndex) - 1].result})`,\r\n                lastInput: ')',\r\n                currentExpression: `${this.state.pgArray[parseInt(this.state.historyViewIndex) - 1].result}`,\r\n                wholeEquation: [''],\r\n                historyViewIndex: this.state.pgArray.length - 1,\r\n        }, () => {\r\n            axios.post('https://calc-spring.herokuapp.com/postgres/equation', { \r\n                        equation: equationFromHistory, \r\n                        result: `${parseFloat(safeEval(equationFromHistory.toString().replace(/,/g,'')).toFixed(4).toString())}`\r\n                    },\r\n                    {\r\n                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                    }\r\n                    ).then(function (response) {\r\n                        // Make a request for equations\r\n                        axios.get('https://calc-spring.herokuapp.com/postgres/equation/all', \r\n                                    {\r\n                                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                                    })\r\n                        .then(function (res) {\r\n                        // handle success\r\n                            set_pgArray_from_spring(res);\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error);\r\n                        })      \r\n                \r\n              })\r\n              .catch(function (error) {\r\n                console.log(error);\r\n              });\r\n        })\r\n    }\r\n\r\n    // historyScreenPress(){\r\n\r\n    //     let equationFromHistory = this.state.resultArray[parseInt(this.state.historyViewIndex)].equation;\r\n\r\n    //     this.setState({\r\n    //             lastResult: `(${this.state.resultArray[parseInt(this.state.historyViewIndex)].result})`,\r\n    //             lastInput: ')',\r\n    //             currentExpression: `${this.state.resultArray[parseInt(this.state.historyViewIndex)].result}`,\r\n    //             wholeEquation: [''],\r\n    //             historyViewIndex: this.state.resultArray.length - 1,\r\n    //     }, () => {\r\n\r\n    //         this.setState({\r\n    //             resultArray: [...this.state.resultArray, { equation: equationFromHistory, result: parseFloat(safeEval(equationFromHistory.toString().replace(/,/g,'')).toFixed(4).toString()) }],\r\n    //             historyIndex: this.state.historyIndex + 1\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    numberPress(input) {\r\n        // console.log(`lastInputFromState: ${this.state.lastInput} lastResult = {this.state.lastResult}, thisInput: ${input}`)\r\n        if (input === 'AC') {\r\n            this.setState({\r\n                currentExpression: '',\r\n                lastInput: '',\r\n                wholeEquation: ['']\r\n            })\r\n        }\r\n        else if (input === 'C' && this.state.wholeEquation.length === 1) {\r\n            this.setState({\r\n                currentExpression: '',\r\n                lastInput: '',\r\n            })\r\n        }\r\n        else if (input === 'C' && this.state.wholeEquation.length > 1) {\r\n            // console.log(this.state.lastResult)\r\n            this.setState({\r\n                currentExpression: `(${this.state.lastResult})`,\r\n                lastInput: ')'\r\n            })\r\n        }\r\n        else if (this.state.lastInput === ')' && input>=0 && input<=9) {\r\n            let multiplyParenthesis = '*' + input\r\n            this.setState({\r\n                currentExpression: this.state.currentExpression.concat(multiplyParenthesis),\r\n                lastInput: input\r\n            }, () => {\r\n            });\r\n        }   \r\n        else if (input === '(' && this.state.lastInput === '') {\r\n            this.setState({\r\n                currentExpression: this.state.currentExpression.concat(input),\r\n                lastInput: input\r\n            }, () => {\r\n            });\r\n        }\r\n        else if (input === '-' && this.state.lastInput === '') {\r\n            this.setState({\r\n                currentExpression: this.state.currentExpression.concat(input),\r\n                lastInput: input\r\n            }, () => {\r\n            });\r\n        }\r\n        else if (input === '-' && this.state.lastInput === '(') {\r\n            console.log('hi')\r\n                let negativeParenthesis = input\r\n                this.setState({\r\n                    currentExpression: this.state.currentExpression.concat(negativeParenthesis),\r\n                    lastInput: input\r\n                }, () => {\r\n                });\r\n        }\r\n        else if (input === '(' && (this.state.lastInput === '-' || this.state.lastInput === '+' || this.state.lastInput === '-' || this.state.lastInput === '/') ) {\r\n            this.setState({\r\n                currentExpression: this.state.currentExpression.concat(input),\r\n                lastInput: input\r\n            }, () => {\r\n            });\r\n        }\r\n        else if (input === '(' && ((this.state.lastInput>=0 && this.state.lastInput<=9) || this.state.lastInput===')' || this.state.lastInput)) {\r\n            let multiplyParenthesis = '*'+input\r\n            this.setState({\r\n                currentExpression: this.state.currentExpression.concat(multiplyParenthesis),\r\n                lastInput: input\r\n            }, () => {\r\n            });\r\n        }   \r\n        else if (input === '(' && isNaN(this.state.lastInput)) {\r\n            this.setState({\r\n                currentExpression: this.state.currentExpression.concat(input),\r\n                lastInput: input\r\n            }, () => {\r\n            });\r\n        }\r\n        else if (input === '-' && this.state.lastInput === '-') {\r\n            let negativeParenthesis = '('+input;\r\n            this.setState({\r\n                currentExpression: this.state.currentExpression.concat(negativeParenthesis),\r\n                lastInput: input\r\n            }, () => {\r\n            });\r\n        }\r\n        else if (input !== '=') {\r\n            this.setState({\r\n                currentExpression: this.state.currentExpression.concat(input),\r\n                lastInput: input\r\n            }, () => {\r\n            });\r\n        }\r\n    }\r\n\r\n    equalsPress(currentExpressionFromProps) {\r\n\r\n        //helper functions\r\n        const set_pgArray_from_spring = (response) => {\r\n            this.setState({\r\n                pgArray: response.data\r\n            }, () => {\r\n                // nested ajax for historyLength\r\n                axios.get('https://calc-spring.herokuapp.com/postgres/equation/count', \r\n                            {\r\n                                headers: {'Access-Control-Allow-Origin': '*'}\r\n                            })\r\n                .then(function (res) {\r\n                    \r\n                    set_historyLength_from_spring(res);\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n                // end of nested ajax for historyLength\r\n            })\r\n        }\r\n        const set_historyLength_from_spring = (response) => {\r\n            this.setState({\r\n                historyLength: response.data\r\n            }, () => {\r\n                this.setState({\r\n                    historyViewIndex: this.state.historyLength\r\n                })\r\n            })\r\n        }\r\n        // helper functions\r\n\r\n        let currentExpressionParenCheck = currentExpressionFromProps.split('')\r\n        let countParensLeft = 0;\r\n        let countParensRight = 0;\r\n\r\n        // if (currentExpressionParenCheck[0] && currentExpressionParenCheck[1] && currentExpressionParenCheck[currentExpressionParenCheck-1] && currentExpressionParenCheck[-2]) {\r\n        //     console.log('hi')\r\n        //     currentExpressionParenCheck.pop();\r\n        //     currentExpressionParenCheck.shift();\r\n        //     currentExpressionFromProps = currentExpressionParenCheck.join();\r\n        // }\r\n\r\n        for(let i=0; i < currentExpressionParenCheck.length; i++) {\r\n            if (currentExpressionParenCheck[i] === '(') {\r\n                countParensLeft++;\r\n            }\r\n            if (currentExpressionParenCheck[i] === ')') {\r\n                countParensRight++;\r\n            }\r\n        }\r\n        if (countParensLeft !== countParensRight) {\r\n            this.setState({\r\n                currentExpression: \"Invalid operation, did not close expression, please press 'AC'\",\r\n                            lastInput: '',\r\n                            wholeEquation: [''],\r\n\r\n            })\r\n        }   \r\n        else {\r\n            let result = parseFloat(safeEval(currentExpressionFromProps.replace(/,/g,'')).toFixed(4)).toString();\r\n            console.log(parseFloat(this.state.currentExpression), parseFloat(this.state.wholeEquation[0]))\r\n            if (this.state.wholeEquation.length === 1) {\r\n                this.setState({\r\n                    wholeEquation: parseFloat(this.state.currentExpression.toString().replace(/[()]/g,'')) === parseFloat(this.state.wholeEquation.toString().replace(/[()]/g,'')) ? this.state.wholeEquation : this.state.wholeEquation.concat(`(${currentExpressionFromProps})`),\r\n                    currentExpression: `(${result})`,\r\n                    lastInput: ')',\r\n                    lastResult: `${result}`\r\n                }, () => {\r\n\r\n                    if (this.state.lastResult === \"(Infinity)\" || this.state.lastResult === \"(NaN\") {\r\n                        this.setState({\r\n                            currentExpression: \"Invalid operation, please press 'AC'\",\r\n                            lastInput: '',\r\n                            wholeEquation: ['']\r\n                        })\r\n                    } \r\n                    else {\r\n                        console.log(this.state.wholeEquation.toString().replace(/,/g,''))\r\n                        console.log(\"posted result: \"+`${parseFloat(safeEval(this.state.wholeEquation.toString().replace(/,/g,'')).toFixed(4).toString())}`)\r\n    \r\n                        axios.post('https://calc-spring.herokuapp.com/postgres/equation', { \r\n                                        equation: this.state.wholeEquation.toString().replace(/,/g,''), \r\n                                        result: this.state.lastResult\r\n                                    },\r\n                                    {\r\n                                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                                    }\r\n                                    ).then(function (response) {\r\n                                        // Make a request for equations\r\n                                        axios.get('https://calc-spring.herokuapp.com/postgres/equation/all', \r\n                                                    {\r\n                                                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                                                    })\r\n                                        .then(function (res) {\r\n                                        // handle success\r\n                                            set_pgArray_from_spring(res);\r\n                                        })\r\n                                        .catch(function (error) {\r\n                                            console.log(error);\r\n                                        })      \r\n                                \r\n                              })\r\n                              .catch(function (error) {\r\n                                console.log(error);\r\n                              });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n    \r\n                let takeOffFirstNumber = currentExpressionFromProps.split(/(?=[-+/*()])/);\r\n                \r\n                console.log('pre-splice: ' + takeOffFirstNumber);\r\n                takeOffFirstNumber.splice(0,2);\r\n\r\n                \r\n                console.log('firstNumber: '+ takeOffFirstNumber[0], 'WholeExpression: ' + takeOffFirstNumber)\r\n                \r\n                    \r\n                let firstOperator; \r\n                \r\n                if(takeOffFirstNumber[0] !== undefined) {\r\n                    firstOperator= takeOffFirstNumber[0].split('');\r\n                    firstOperator = firstOperator.shift();\r\n                }\r\n                else if(takeOffFirstNumber[0] === undefined) {\r\n                    takeOffFirstNumber = currentExpressionFromProps.toString().replace(/[()]/g,'')\r\n                }\r\n\r\n                let currentExpressionArray;\r\n                let currentExpressionJoined;\r\n\r\n                if(takeOffFirstNumber.length > 2 && takeOffFirstNumber[0] !== undefined) {\r\n                    currentExpressionArray= takeOffFirstNumber.join('').split('');\r\n                    currentExpressionArray.splice(0,1);\r\n                    currentExpressionJoined = currentExpressionArray.join('');\r\n                }\r\n                else{\r\n                    currentExpressionJoined = takeOffFirstNumber;\r\n                }\r\n\r\n                if(firstOperator === ')') {\r\n                    firstOperator = '+'\r\n                }\r\n\r\n                if(takeOffFirstNumber[1] === '*') {\r\n                    takeOffFirstNumber[0] = ''\r\n                    takeOffFirstNumber[1] = ''\r\n                    firstOperator = '*'\r\n                    currentExpressionJoined = takeOffFirstNumber.join('')\r\n                }\r\n                else if(takeOffFirstNumber[1] === '/') {\r\n                    takeOffFirstNumber[0] = ''\r\n                    takeOffFirstNumber[1] = ''\r\n                    firstOperator = '/'\r\n                    currentExpressionJoined = takeOffFirstNumber.join('')\r\n                }\r\n                else if(takeOffFirstNumber[1] === '+') {\r\n                    takeOffFirstNumber[0] = ''\r\n                    takeOffFirstNumber[1] = ''\r\n                    firstOperator = '+'\r\n                    currentExpressionJoined = takeOffFirstNumber.join('')\r\n                }\r\n                \r\n                console.log('firstNumber: '+ takeOffFirstNumber[0], 'WholeExpression: ' + takeOffFirstNumber, \"currentExpression: \"+ currentExpressionJoined)\r\n                currentExpressionJoined[0] === ')' ? currentExpressionJoined.splice(0,1).toString() : console.log('not closing paren');\r\n                if( takeOffFirstNumber === currentExpressionJoined ) {\r\n                        currentExpressionJoined = currentExpressionJoined[0].split('');\r\n                        currentExpressionJoined[0]=''\r\n                        currentExpressionJoined = currentExpressionJoined.join('');\r\n                        console.log('fixed the undefined 1 number situation')\r\n\r\n                }\r\n\r\n\r\n                console.log('firstNumber: '+ takeOffFirstNumber[0], 'WholeExpression: ' + takeOffFirstNumber, \"currentExpression: \"+ currentExpressionJoined)\r\n                \r\n                if( currentExpressionJoined === '.') {\r\n                    takeOffFirstNumber = takeOffFirstNumber[0].split('')\r\n                    takeOffFirstNumber[0] = '';\r\n                    currentExpressionJoined = takeOffFirstNumber.toString().replace(/,/g,'');\r\n                }\r\n\r\n                this.setState({\r\n                    wholeEquation: firstOperator === undefined ? takeOffFirstNumber : firstOperator === currentExpressionJoined ? this.state.wholeEquation.concat(`${currentExpressionJoined}`) : this.state.wholeEquation.concat(`${firstOperator}(${currentExpressionJoined})`),\r\n                    currentExpression: firstOperator === currentExpressionJoined ? result :`(${result})`,\r\n                    lastInput: ')',\r\n                    lastResult: `${result}`\r\n                }, () => {\r\n                    if(this.state.lastResult === \"(Infinity)\" || this.state.lastResult === \"(NaN\") {\r\n                        this.setState({\r\n                            currentExpression: \"Invalid operation, please press 'C' or 'AC\",\r\n                            lastInput: '',\r\n                            wholeEquation: ['']\r\n                        })\r\n                    }\r\n                    else {\r\n                        axios.post('https://calc-spring.herokuapp.com/postgres/equation', { \r\n                                        equation: this.state.wholeEquation.toString().replace(/,/g,''), \r\n                                        result: this.state.lastResult\r\n                                    },\r\n                                    {\r\n                                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                                    }\r\n                                    ).then(function (response) {\r\n                                        // Make a request for equations\r\n                                        axios.get('https://calc-spring.herokuapp.com/postgres/equation/all', \r\n                                                    {\r\n                                                        headers: {'Access-Control-Allow-Origin': '*'}\r\n                                                    })\r\n                                        .then(function (res) {\r\n                                        // handle success\r\n                                            set_pgArray_from_spring(res);\r\n                                        })\r\n                                        .catch(function (error) {\r\n                                            console.log(error);\r\n                                        })      \r\n                                \r\n                              })\r\n                              .catch(function (error) {\r\n                                console.log(error);\r\n                              })\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n        \r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <BrowserRouter > */}\r\n                    <div>\r\n                        {/* the exact makes sure that it only shows up on that path */}\r\n                        <CalculatorBody className='container'>\r\n                            <MainScreen className='row' style={{margin: '0px'}} \r\n                                        wholeEquation= {this.state.wholeEquation} \r\n                                        currentExpression={this.state.currentExpression}/>\r\n\r\n                            <div className='row container' style={{width: '100%',height: '10vh',marginTop: '0px', marginBottom: '0px'}}>\r\n                                <HistoryButton delta='-1' operation='prev' style={{fontSize: '2vh'}} historyViewIndex = {this.state.historyViewIndex} historyViewIndexChangeHandler = {this.historyViewChange}/>\r\n                                <HistoryScreen style={{margin: '0px'}} historyScreenIndex={this.state.pgArray.length} historyScreenPressHandler = {this.historyScreenPress} displayHistoryEquation = {this.state.pgArray[this.state.historyViewIndex-1].equation} resultFromHistory = {this.state.pgArray[this.state.historyViewIndex-1].result}/>\r\n                                <HistoryButton delta='1' operation='next' style={{fontSize: '2vh'}} historyViewIndex = {this.state.historyViewIndex} historyViewIndexChangeHandler = {this.historyViewChange}/>\r\n                            </div>\r\n                            <ButtonPad style={{margin: '0px'}}>\r\n                                <div className='row' style={{height: '18%', margin: '0px'}}>\r\n                                    <OperationButton operation='(' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}  lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                    <OperationButton operation=')' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}   lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                    <OperationButton operation='AC' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}   lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                    <OperationButton operation='C' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}   lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                </div>\r\n                                <div className='row' style={{height: '18%', margin: '0px'}}>\r\n                                    <NumberButton number='7' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <NumberButton number='8' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <NumberButton number='9' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <OperationButton operation='/' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}  lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                </div>\r\n                                <div className='row' style={{height: '18%', margin: '0px'}}>\r\n                                    <NumberButton number='4' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <NumberButton number='5' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <NumberButton number='6' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <OperationButton operation='*' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}  lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                </div>\r\n                                <div className='row' style={{height: '18%', margin: '0px'}}>\r\n                                    <NumberButton number='1' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <NumberButton number='2' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <NumberButton number='3' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <OperationButton operation='-' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}  lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                </div>\r\n                                <div className='row' style={{height: '18%', margin: '0px'}}>\r\n                                    <NumberButton number='0' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} />\r\n                                    <OperationButton operation='.' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}  lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                    <OperationButton operation='=' equalsHandler={this.equalsPress} numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}  lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                    <OperationButton operation='+' numberPressHandler={this.numberPress} currentExpression={this.state.currentExpression} wholeEquation={this.state.wholeEquation}  lastInput = {this.state.lastInput} lastResult = {this.state.lastResult}/>\r\n                                </div>\r\n                                <div className='row' style={{height: '10%', margin: '0px'}}>\r\n                                    <DeleteButton operation='Delete History' deleteHistoryHandler={this.deleteHistory} ></DeleteButton>\r\n                                </div>\r\n                            </ButtonPad>\r\n                        </CalculatorBody>\r\n                    </div>\r\n                {/* </BrowserRouter> */}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n// export default connect(null, actions)(App);\r\nexport default App;","// render the root to the dom\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { Provider } from 'react-redux';\r\n// import { createStore, applyMiddleware } from 'redux';\r\n// import reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\n// import reducers from './reducers';\r\n\r\n// function that allows us to initiate redux store. \r\n// empty array to start , server-side param, applyMiddleware()\r\n// const store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n    // <Provider store = {store}>\r\n        <App/>,\r\n    // </Provider>, \r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}